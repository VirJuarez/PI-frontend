{"ast":null,"code":"import { GET_RECIPES, GET_RECIPE_DETAIL, FILTER_BY_DIET, ORDER_BY_NAME, ORDER_BY_SCORE, GET_RECIPES_NAME } from \"../actions\";\nconst initialState = {\n  recipes: [],\n  allrecipes: [],\n  recipeDetail: {}\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_RECIPES:\n      return {\n        ...state,\n        recipes: action.payload,\n        allrecipes: action.payload\n      };\n    case GET_RECIPES_NAME:\n      return {\n        ...state,\n        recipes: action.payload\n        // allrecipes:action.payload\n      };\n\n    case GET_RECIPE_DETAIL:\n      return {\n        ...state,\n        recipeDetail: action.payload\n      };\n    case FILTER_BY_DIET:\n      const allrecipes = state.allrecipes;\n      const filtered = action.payload === \"All\" ? allrecipes : allrecipes.filter(r => {\n        if (typeof r.diets[0] === \"string\") {\n          return r.diets.includes(action.payload.toLowerCase());\n        } else {\n          return r.diets.map(s => s.name).includes(action.payload.toLowerCase());\n        }\n      });\n      return {\n        ...state,\n        recipes: filtered\n      };\n    case ORDER_BY_NAME:\n      const ordered = action.payload === \"A-Z\" ? state.recipes.sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0) : state.recipes.sort((a, b) => a.name < b.name ? 1 : b.name < a.name ? -1 : 0);\n      const allordered = action.payload === \"A-Z\" ? state.allrecipes.sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0) : state.allrecipes.sort((a, b) => a.name < b.name ? 1 : b.name < a.name ? -1 : 0);\n      return {\n        ...state,\n        recipes: ordered,\n        allrecipes: allordered\n      };\n    case ORDER_BY_SCORE:\n      const orderedbyscore = action.payload === \"Asc\" ? state.recipes.sort((a, b) => a.healthscore > b.healthscore ? 1 : b.healthscore > a.healthscore ? -1 : 0) : state.recipes.sort((a, b) => a.healthscore < b.healthscore ? 1 : b.healthscore < a.healthscore ? -1 : 0);\n      const allorderedbyscore = action.payload === \"Asc\" ? state.allrecipes.sort((a, b) => a.healthscore > b.healthscore ? 1 : b.healthscore > a.healthscore ? -1 : 0) : state.allrecipes.sort((a, b) => a.healthscore < b.healthscore ? 1 : b.healthscore < a.healthscore ? -1 : 0);\n      return {\n        ...state,\n        recipes: orderedbyscore,\n        allrecipes: allorderedbyscore\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["GET_RECIPES","GET_RECIPE_DETAIL","FILTER_BY_DIET","ORDER_BY_NAME","ORDER_BY_SCORE","GET_RECIPES_NAME","initialState","recipes","allrecipes","recipeDetail","rootReducer","state","action","type","payload","filtered","filter","r","diets","includes","toLowerCase","map","s","name","ordered","sort","a","b","allordered","orderedbyscore","healthscore","allorderedbyscore"],"sources":["C:/Users/virgi/OneDrive - University of Massachusetts/Desktop/Henry/PI-Food-main/client/src/reducer/index.js"],"sourcesContent":["import {GET_RECIPES, GET_RECIPE_DETAIL, FILTER_BY_DIET, ORDER_BY_NAME, ORDER_BY_SCORE, GET_RECIPES_NAME} from \"../actions\";\r\n\r\nconst initialState = {\r\n    recipes: [],\r\n    allrecipes: [],\r\n    recipeDetail: {}\r\n}\r\n\r\nfunction rootReducer (state=initialState,action){\r\n switch(action.type){\r\n    case GET_RECIPES:\r\n        return{\r\n            ...state,\r\n            recipes:action.payload,\r\n            allrecipes:action.payload,\r\n        }\r\n\r\n    case GET_RECIPES_NAME:\r\n        return{\r\n            ...state,\r\n            recipes:action.payload,\r\n            // allrecipes:action.payload\r\n        }\r\n    case GET_RECIPE_DETAIL:\r\n        return{\r\n            ...state,\r\n            recipeDetail: action.payload\r\n        }\r\n    case FILTER_BY_DIET:\r\n        const allrecipes = state.allrecipes;\r\n        const filtered = action.payload === \"All\" ? allrecipes : allrecipes.filter(r =>{\r\n            if(typeof r.diets[0]=== \"string\") {return r.diets.includes(action.payload.toLowerCase())}\r\n            else{return r.diets.map(s=>s.name).includes(action.payload.toLowerCase())}})    \r\n        return{\r\n            ...state,\r\n            recipes: filtered\r\n        }\r\n    \r\n    case ORDER_BY_NAME:\r\n        const ordered = action.payload === \"A-Z\" ? state.recipes.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)) \r\n        : state.recipes.sort((a,b) => (a.name < b.name) ? 1 : ((b.name < a.name) ? -1 : 0))\r\n        const allordered = action.payload === \"A-Z\" ? state.allrecipes.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)) \r\n        : state.allrecipes.sort((a,b) => (a.name < b.name) ? 1 : ((b.name < a.name) ? -1 : 0))\r\n        return{\r\n            ...state,\r\n            recipes: ordered,\r\n            allrecipes: allordered\r\n        }\r\n\r\n    case ORDER_BY_SCORE:\r\n        const orderedbyscore = action.payload === \"Asc\" ? state.recipes.sort((a,b) => (a.healthscore > b.healthscore) ? 1 : ((b.healthscore > a.healthscore) ? -1 : 0)) \r\n        : state.recipes.sort((a,b) => (a.healthscore < b.healthscore) ? 1 : ((b.healthscore < a.healthscore) ? -1 : 0))\r\n        const allorderedbyscore = action.payload === \"Asc\" ? state.allrecipes.sort((a,b) => (a.healthscore > b.healthscore) ? 1 : ((b.healthscore > a.healthscore) ? -1 : 0)) \r\n        : state.allrecipes.sort((a,b) => (a.healthscore < b.healthscore) ? 1 : ((b.healthscore < a.healthscore) ? -1 : 0))\r\n        return{\r\n            ...state,\r\n            recipes: orderedbyscore,\r\n            allrecipes: allorderedbyscore\r\n        }\r\n        \r\n\r\n        \r\n\r\n    default:\r\n        return{...state}\r\n }\r\n}\r\n\r\n\r\nexport default rootReducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}